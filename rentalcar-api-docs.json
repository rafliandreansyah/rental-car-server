{
  "openapi": "3.0.3",
  "info": {
    "title": "Rental Car Server",
    "description": "Api documentation rental car server",
    "version": "1.0.0",
    "contact": {
      "name": "Rafli Andreansyah",
      "email": "rafliandreansyah957@gmail.com",
      "url": "https://www.linkedin.com/in/rafli-andreansyah-86299217a"
    }
  },
  "servers": [
    {
      "url": "https://{env}:{port}/api/{version}",
      "description": "Server developer rental car",
      "variables": {
        "env": {
          "description": "Environtment url",
          "default": "localhost",
          "enum": [
            "localhost"
          ]
        },
        "port": {
          "description": "port server rental car",
          "default": "8080",
          "enum": [
            "8080",
            "8081"
          ]
        },
        "version": {
          "description": "api version",
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "paths": {
    "/auth/authenticate": {
      "post": {
        "description": "end point for a authentication user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "examples": {
                "login": {
                  "summary": "request login",
                  "value": {
                    "email": "test@gmail.com",
                    "password": "secure"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": 200,
                      "error": null,
                      "data": {
                        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundError"
          },
          "401": {
            "description": "invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "not found": {
                    "value": {
                      "status": 401,
                      "error": "Invalid email or password",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "description": "end point for reset password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "examples": {
                "reset": {
                  "value": {
                    "email": "reset@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response success send reset password to email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": 200,
                      "error": null,
                      "data": {
                        "message": "Send link reset password success. Please check your email message to reset password"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/UserNotFoundError"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Registration new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "register": {
                  "value": {
                    "email": "email@mail.com",
                    "password": "secretpassword",
                    "name": "alexandre",
                    "phone": "+6281232720821"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response register success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "success": {
                    "description": "register success example",
                    "value": {
                      "status": 200,
                      "error": null,
                      "data": "success register"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "error validation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "bad request": {
                    "value": {
                      "status": 400,
                      "error": "format email not valid",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "error when user already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "examples": {
                  "conflict": {
                    "value": {
                      "status": 409,
                      "error": "user with this email already registered",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GeneralResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "error": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      }
    },
    "responses": {
      "UserNotFoundError": {
        "description": "Response error for user not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralResponse"
            },
            "examples": {
              "error": {
                "value": {
                  "status": 404,
                  "error": "user doesn't exist",
                  "data": null
                }
              }
            }
          }
        }
      }
    }
  }
}
